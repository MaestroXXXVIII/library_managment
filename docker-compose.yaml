services:
  postgres:
    container_name: postgres
    image: postgres:15.3-alpine
    ports:
      - "5435:5432"
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1GB
    networks:
      - custom
  alembic:
    build: .
    env_file:
      - '.env'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - custom
    command: sh -c "poetry run alembic upgrade head"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - '.env'
    depends_on:
      - alembic
    networks:
      - custom
    command: sh -c "poetry run python3 src/main.py"
    ports:
      - "8080:8080"

networks:
  custom:
    driver: bridge